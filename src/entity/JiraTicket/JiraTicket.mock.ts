import { JiraTicket } from "./JiraTicket";

export const mockJiraTickets: JiraTicket[] = [
  new JiraTicket({
    id: "PROJ-123",
    title: "Implement user authentication system",
    status: "In Progress",
    priority: "High",
    assignee: "John Doe",
    description: "Create a secure user authentication system with JWT tokens and role-based access control. This includes implementing login/logout endpoints, password hashing, session management, and middleware for role validation.",
    type: "Story",
    storyPoints: 8,
    sprint: "Sprint 24",
    created: "2024-01-15T09:00:00Z",
    updated: "2024-01-20T14:30:00Z",
    labels: ["security", "authentication", "backend"],
    components: ["Auth Service", "API Gateway"],
    reporter: "Product Manager",
  }),
  new JiraTicket({
    id: "PROJ-124",
    title: "Fix memory leak in dashboard component",
    status: "To Do",
    priority: "Critical",
    assignee: "Jane Smith",
    description: "Investigate and fix memory leak causing performance issues in the main dashboard. The leak appears to be related to event listeners not being properly cleaned up in React components.",
    type: "Bug",
    storyPoints: 5,
    sprint: "Sprint 24",
    created: "2024-01-18T11:15:00Z",
    updated: "2024-01-18T11:15:00Z",
    labels: ["performance", "memory-leak", "frontend"],
    components: ["Dashboard", "React Components"],
    reporter: "QA Engineer",
  }),
  new JiraTicket({
    id: "PROJ-125",
    title: "Add unit tests for payment service",
    status: "Code Review",
    priority: "Medium",
    assignee: "Mike Johnson",
    description: "Increase test coverage for the payment service module to meet 80% coverage requirement. Focus on edge cases and error handling scenarios.",
    type: "Task",
    storyPoints: 3,
    sprint: "Sprint 23",
    created: "2024-01-10T08:45:00Z",
    updated: "2024-01-22T16:20:00Z",
    labels: ["testing", "coverage", "payment"],
    components: ["Payment Service", "Unit Tests"],
    reporter: "Tech Lead",
  }),
  new JiraTicket({
    id: "PROJ-126",
    title: "Upgrade database to PostgreSQL 14",
    status: "To Do",
    priority: "Low",
    assignee: "Sarah Wilson",
    description: "Migrate existing PostgreSQL 12 database to version 14 for improved performance and security. This includes updating schemas, testing compatibility, and planning downtime.",
    type: "Epic",
    storyPoints: 13,
    sprint: "Sprint 25",
    created: "2024-01-05T10:00:00Z",
    updated: "2024-01-12T09:30:00Z",
    labels: ["database", "migration", "postgresql"],
    components: ["Database", "Infrastructure"],
    reporter: "DevOps Engineer",
  }),
  new JiraTicket({
    id: "PROJ-127",
    title: "Implement dark mode for mobile app",
    status: "In Progress",
    priority: "Medium",
    assignee: "Alex Chen",
    description: "Add dark mode theme support to the mobile application. This includes updating all UI components, icons, and ensuring proper contrast ratios for accessibility.",
    type: "Feature",
    storyPoints: 5,
    sprint: "Sprint 24",
    created: "2024-01-12T14:20:00Z",
    updated: "2024-01-21T10:45:00Z",
    labels: ["mobile", "ui", "theme", "accessibility"],
    components: ["Mobile App", "UI Components"],
    reporter: "UX Designer",
  }),
  new JiraTicket({
    id: "PROJ-128",
    title: "Optimize API response times",
    status: "Done",
    priority: "High",
    assignee: "David Park",
    description: "Improve API response times by implementing caching strategies and optimizing database queries. Target is to reduce average response time from 800ms to under 200ms.",
    type: "Improvement",
    storyPoints: 8,
    sprint: "Sprint 23",
    created: "2024-01-08T09:15:00Z",
    updated: "2024-01-19T17:00:00Z",
    labels: ["performance", "api", "caching", "optimization"],
    components: ["API", "Database", "Cache"],
    reporter: "Backend Developer",
  }),
];
